# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

sudo: required

services:
  - docker

matrix:
  include:
    env:
      - DOCKER_FILE=Dockerfile.dev
      - DOCKER_IMAGE=wptd-dev
      - DOCKER_INSTANCE=wptd-dev-${RANDOM}
      - TEST_TARGET=py_lint
    env:
      - DOCKER_FILE=Dockerfile.dev
      - DOCKER_IMAGE=wptd-dev
      - DOCKER_INSTANCE=wptd-dev-${RANDOM}
      - TEST_TARGET=py_test
    env:
      - DOCKER_FILE=Dockerfile.dev
      - DOCKER_IMAGE=wptd-dev
      - DOCKER_INSTANCE=wptd-dev-${RANDOM}
      - TEST_TARGET=go_lint
    env:
      - DOCKER_FILE=Dockerfile.dev
      - DOCKER_IMAGE=wptd-dev
      - DOCKER_INSTANCE=wptd-dev-${RANDOM}
      - TEST_TARGET=go_test
    env:
      - DOCKER_FILE=Dockerfile.jenkins
      - DOCKER_IMAGE=wptd-testrun-jenkins
      - DOCKER_INSTANCE=wptd-testrun-jenkins-${RANDOM}
      - TEST_TARGET=jenkins_test

before_install:
  - docker build -t wptd-base -f Dockerfile.base .
  - docker build -t "${DOCKER_IMAGE}" -f "${DOCKER_FILE}" .
  - docker run -t -d --entrypoint /bin/bash -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro -v "$(pwd)":/wptdashboard -u $(id -u $USER):$(id -g $USER) --name "${DOCKER_INSTANCE}" "${DOCKER_IMAGE}"

install:
  - if [ "${INSTALL_TARGET}" != "" ]; then docker exec -t -u 0:0 "${DOCKER_INSTANCE}" make "${INSTALL_TARGET}"; fi
  - docker exec -u 0:0 "${DOCKER_INSTANCE}" chown -R $(id -u $USER):$(id -g $USER) /home/jenkins

script:
  - docker exec -t -u $(id -u $USER):$(id -g $USER) "${DOCKER_INSTANCE}" make "${TEST_TARGET}"

after_script:
  - docker stop "${DOCKER_INSTANCE}"
  - docker rm "${DOCKER_INSTANCE}"
