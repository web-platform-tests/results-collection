# Copyright 2017 The WPT Dashboard Project. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

sudo: required

# Don't cap the git depth @50 (default), we check the nov 21 sha-of-the-day
# in a py_test.
git:
  depth: false

services:
  - docker

matrix:
  include:
    - language: python
      env:
        - DOCKER_FILE=Dockerfile.dev
        - DOCKER_IMAGE=wptd-dev
        - DOCKER_INSTANCE=wptd-dev-${RANDOM}
        - INSTALL_TARGET=py_deps
        - TEST_TARGET=py_lint
    - language: python
      env:
        - DOCKER_FILE=Dockerfile.dev
        - DOCKER_IMAGE=wptd-dev
        - DOCKER_INSTANCE=wptd-dev-${RANDOM}
        - INSTALL_TARGET=py_deps
        - TEST_TARGET=py_test
    - language: go
      env:
        - DOCKER_FILE=Dockerfile.dev
        - DOCKER_IMAGE=wptd-dev
        - DOCKER_INSTANCE=wptd-dev-${RANDOM}
        - INSTALL_TARGET=go_deps
        - TEST_TARGET=go_lint
    - language: go
      env:
        - DOCKER_FILE=Dockerfile.dev
        - DOCKER_IMAGE=wptd-dev
        - DOCKER_INSTANCE=wptd-dev-${RANDOM}
        - INSTALL_TARGET=go_deps
        - TEST_TARGET=go_test
    - language: python
      env:
        - DOCKER_FILE=Dockerfile.jenkins
        - DOCKER_IMAGE=wptd-testrun-jenkins
        - DOCKER_INSTANCE=wptd-testrun-jenkins-${RANDOM}
        - INSTALL_TARGET=jenkins_install
        - TEST_TARGET=jenkins_test

before_install:
  - docker build -t wptd-base -f Dockerfile.base .
  - docker build -t "${DOCKER_IMAGE}" -f "${DOCKER_FILE}" .
  - docker run -t -d --entrypoint /bin/bash -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro -v "$(pwd)":/home/jenkins/wptdashboard -u $(id -u $USER):$(id -g $USER) --name "${DOCKER_INSTANCE}" "${DOCKER_IMAGE}"

install:
  - if [ "${INSTALL_TARGET}" != "" ]; then docker exec -t -u 0:0 "${DOCKER_INSTANCE}" make "${INSTALL_TARGET}"; fi
  - docker exec -u 0:0 "${DOCKER_INSTANCE}" chown -R $(id -u $USER):$(id -g $USER) /home/jenkins

script:
  - docker exec -t -u $(id -u $USER):$(id -g $USER) "${DOCKER_INSTANCE}" make "${TEST_TARGET}"

after_script:
  - docker stop "${DOCKER_INSTANCE}"
  - docker rm "${DOCKER_INSTANCE}"
